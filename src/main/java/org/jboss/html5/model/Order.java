package org.jboss.html5.model;
// Generated 25-Sep-2016 11:42:16 by Hibernate Tools 4.0.1.Final

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "order", catalog = "4fashion")
public class Order implements Serializable {
	private static final long serialVersionUID = -5155373676057149589L;
	
	private long orderId;
	private Buyer buyer;
	private Vendor vendor;
	private Set<Payment> payments = new HashSet<Payment>(0);
	private Set<OrderItem> orderItems = new HashSet<OrderItem>(0);

	public Order() {
	}

	public Order(long orderId, Buyer buyer, Vendor vendor) {
		this.orderId = orderId;
		this.buyer = buyer;
		this.vendor = vendor;
	}

	public Order(long orderId, Buyer buyer, Vendor vendor, Set<Payment> payments, Set<OrderItem> orderItems) {
		this.orderId = orderId;
		this.buyer = buyer;
		this.vendor = vendor;
		this.payments = payments;
		this.orderItems = orderItems;
	}

	@Id
	@Column(name = "ORDER_ID", unique = true, nullable = false)
	public long getOrderId() {
		return this.orderId;
	}

	public void setOrderId(long orderId) {
		this.orderId = orderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BUYER_FK", nullable = false)
	public Buyer getBuyer() {
		return this.buyer;
	}

	public void setBuyer(Buyer buyer) {
		this.buyer = buyer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VENDOR_FK", nullable = false)
	public Vendor getVendor() {
		return this.vendor;
	}

	public void setVendor(Vendor vendor) {
		this.vendor = vendor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Payment> getPayments() {
		return this.payments;
	}

	public void setPayments(Set<Payment> payments) {
		this.payments = payments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<OrderItem> getOrderItems() {
		return this.orderItems;
	}

	public void setOrderItems(Set<OrderItem> orderItems) {
		this.orderItems = orderItems;
	}

}
